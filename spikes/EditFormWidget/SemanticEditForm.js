
var the_model = {}

var general_type_layout = {
  element_id : 'general_info_panel',
  tab_name : 'General',
  properties : [
    { label : 'Title', property_uri : 'dc.title' },
    { label : 'Description', property_uri : 'dc.description' }
  ]
}


function makeSIMEditor(editor_id) {
  // Get hold of the element
  root_element = $( editor_id )
  // Make the root element into a tabs control
  var tab_control = root_element.tabs();

  var general_info_panel = buildFormPanel(general_type_layout, root_element)

  // Add the generic details tab
  // Working from http://jqueryui.com/demos/tabs/#...immediately_select_a_just_added_tab
  // and http://blog.favrik.com/2009/08/11/dynamically-adding-jquery-tabs-round2/
  tab_control.tabs('add','#'+general_type_layout.element_id,general_type_layout.tab_name);

  //tab_control.tabs('add','#default',"Default Properties");
  //tab_control.tabs('add','#t1',"Default Properties1");
  //tab_control.tabs('add','#t2',"Default Properties2");
  //tab_control.tabs('add','#t3',"Default Properties3");
}


// Paint the template for the General Tab
function buildFormPanel(layout_definition, parent_element) {
  // the class here is copied from the page generated by a static tab. It may change with versions of JQuery I guess, so beware!
  var p = parent_element.append("<div id=\""+layout_definition.element_id+"\" class=\"ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide\"></div>");
  var new_table = $(document.createElement('table'));

  p.append(new_table);

  var parent_context = "";

  var i=0;

  for ( p in layout_definition.properties ) {


    var propdef = layout_definition.properties[p];

    // Make sure we have an object for this property in the model
    var property_model = the_model[propdef.property_uri];

    // If this is the first time we have seen this property, create a new empty metamodel (Will contain info about the values and the binding to the controls)
    if ( property_model == null ) {
      property_model = {
        '__metamodel' : {
          property_value_containers : []
        },
        'values' : [
        ]
      }
      the_model[propdef.property_uri] = property_model;
    }

    var new_ul = $(document.createElement('ul'));
    var new_td = $(document.createElement('td'));

    // Add a property to the control so it knows where the binding info in the metamodel is
    // new_ul.setAttribute('data-metamodel',property_model);
    // new_ul.get(0).setAttribute('data-metamodel','test');

    // Add this control (parent container) to the list of controls for this property
    property_model.__metamodel.property_value_containers.push(new_ul);

    new_td.append(new_ul);

    // Append a row to the table for every property. Each row will support muiltiple values if cardinality says so
    new_table.append($('<tr>').append("<td><label for=\""+base_property_path+"["+i+"]\">"+propdef.label+"</label></td>",new_td));

    // Work out the root of the property name (The path to an array of values)
    var base_property_path = parent_context+propdef.property_uri

    // For each property, see if there is a value in the model, if so, output an appropriate control
    // For(blah...)

    // Finally, output an empty control to act as a "Next" value (If permitted by cardinality rules)
    var cc = new_ul.append("<li><input id=\""+base_property_path+"["+i+"]\" data-property-path=\""+base_property_path+"\" data-property-idx=\""+i+"\" onkeypress=\"controlUpdated(this);\" type=\"text\"/></li>")

    var input_control = cc.find('input');
    input_control.get(0).setAttribute("data-metamodel",property_model);

    // parent_element.append("</ul></td></tr>");
  }

  parent_element.append("</table>");

  // var data = $('<div id="'+tab_id+'"></div>').append(tab_content);
  // this.tabs.append(data).tabs('add', '#' + tab_id, tab_name);
  // this.tabs.tabs('select', '#' + tab_id);


}

function controlUpdated(control) {
  // alert("updateModel "+control.dataset["data-property-path"]);
  // Have we typed in to the last control in the list? If so, append a new blank control for the user to use when adding another value.. IF cardinality > 1
  var data_property_path = control.getAttribute("data-property-path");
  var metamodel = control.getAttribute('data-metamodel');

  alert("path:"+data_property_path+" metamodel:"+metamodel);
  var prop_model_info = the_model[data_property_path]

  alert("node: "+prop_model_info);

  // Retrieve the model object from data_property_path - It should contain some metadata and an array of values
}
